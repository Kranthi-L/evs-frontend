{"ast":null,"code":"var _jsxFileName = \"/Users/kranthikusallatchupathula/CC/MidTerm/evs-front/src/components/ScoringPageComponent.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState, useParams } from \"react\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplayCategoryForm({\n  categories\n}) {\n  _s();\n  const [catValues, setCatValues] = useState([]);\n  categories.map(cat => {\n    setCatValues([...catValues, {\n      category_name: cat.categoryName,\n      category_score: 0\n    }]);\n  });\n  console.log(catValues);\n  const categoryChange = (index, e) => {\n    const values = [...catValues];\n    values[index][e.target.name] = e.target.value;\n    setCatValues(values);\n  };\n  const formSubmit = e => {\n    e.preventDefault();\n  };\n  const options = [1, 2, 3, 4, 5];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(DisplayCategoryForm, \"25ran0jUF1m+hi135rW77SP9dV4=\");\n_c = DisplayCategoryForm;\nexport default function ScoringPageComponent({\n  id\n}) {\n  _s2();\n  const [item, setItem] = useState();\n  function fetchData() {\n    fetch(\"http://localhost:8080/event?event_id=\" + id).then(response => response.json()).then(data => setItem(data));\n    //console.log(item);\n  }\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      let s = \"Event ended!\";\n      fetchData();\n      if (item) {\n        if (s.localeCompare(item.event.eventStatus) === 0) {\n          clearInterval(intervalId);\n        }\n      }\n    }, 1000);\n  }, []);\n  if (!item) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 21\n  }, this);\n  if (item.event.performer_id === -1) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Event will start in a few minutes! Be ready to score.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 12\n  }, this);\n  if (item.event.performing === false) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [item.performers.filter(performer => performer.performerId === item.event.performer_id).map(item => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Score \", item.performerName, \" performance in these catagories\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(DisplayCategoryForm, {\n      categories: item.categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: item.performers.filter(performer => performer.performerId === item.event.performer_id).map(item => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [item.performerName, \" performing.......\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n}\n_s2(ScoringPageComponent, \"UJ7S4ONYTbMuoKy/8Sz9imtJ7aY=\");\n_c2 = ScoringPageComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"DisplayCategoryForm\");\n$RefreshReg$(_c2, \"ScoringPageComponent\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Fragment","_Fragment","jsxDEV","_jsxDEV","DisplayCategoryForm","categories","_s","catValues","setCatValues","map","cat","category_name","categoryName","category_score","console","log","categoryChange","index","e","values","target","name","value","formSubmit","preventDefault","options","_c","ScoringPageComponent","id","_s2","item","setItem","fetchData","fetch","then","response","json","data","intervalId","setInterval","s","localeCompare","event","eventStatus","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","performer_id","performing","performers","filter","performer","performerId","performerName","_c2","$RefreshReg$"],"sources":["/Users/kranthikusallatchupathula/CC/MidTerm/evs-front/src/components/ScoringPageComponent.js"],"sourcesContent":["import React, { useEffect, useState, useParams } from \"react\";\n\nfunction DisplayCategoryForm({ categories }) {\n  const [catValues, setCatValues] = useState([]);\n\n  categories.map((cat) => {\n    setCatValues([\n      ...catValues,\n      { category_name: cat.categoryName, category_score: 0 },\n    ]);\n  });\n\n  console.log(catValues);\n\n  const categoryChange = (index, e) => {\n    const values = [...catValues];\n    values[index][e.target.name] = e.target.value;\n    setCatValues(values);\n  };\n\n  const formSubmit = (e) => {\n    e.preventDefault();\n  };\n  const options = [1, 2, 3, 4, 5];\n\n  return (\n    <>\n      {/* <div className=\"container mt-5\">\n        <h2 className=\"mb-4\">Score</h2>\n        <form onSubmit={formSubmit}>\n          <div className=\"form-group\">\n            {categories.map((cat, idx) => {\n              <>\n                <label key={idx} htmlFor=\"dropdown\">\n                  {cat.categoryName}\n                </label>\n                <select\n                  name=\"category_name\"\n                  className=\"form-control\"\n                  value={catValues[idx][cat.categoryName]}\n                  onChange={categoryChange}\n                >\n                  <option value=\"\">--select a score--</option>\n                  {options.map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </select>\n              </>;\n            })}\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div> */}\n    </>\n  );\n}\n\nexport default function ScoringPageComponent({ id }) {\n  const [item, setItem] = useState();\n  function fetchData() {\n    fetch(\"http://localhost:8080/event?event_id=\" + id)\n      .then((response) => response.json())\n      .then((data) => setItem(data));\n    //console.log(item);\n  }\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      let s = \"Event ended!\";\n      fetchData();\n      if (item) {\n        if (s.localeCompare(item.event.eventStatus) === 0) {\n          clearInterval(intervalId);\n        }\n      }\n    }, 1000);\n  }, []);\n\n  if (!item) return <h2>Loading...</h2>;\n  if (item.event.performer_id === -1)\n    return <h2>Event will start in a few minutes! Be ready to score.</h2>;\n  if (item.event.performing === false)\n    return (\n      <>\n        {item.performers\n          .filter(\n            (performer) => performer.performerId === item.event.performer_id\n          )\n          .map((item) => (\n            <h3>Score {item.performerName} performance in these catagories</h3>\n          ))}\n        <DisplayCategoryForm categories={item.categories} />\n      </>\n    );\n  return (\n    <>\n      {item.performers\n        .filter(\n          (performer) => performer.performerId === item.event.performer_id\n        )\n        .map((item) => (\n          <h3>{item.performerName} performing.......</h3>\n        ))}\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}